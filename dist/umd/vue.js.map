{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\n *\n * @param {*} data 当前数据是否为对象\n */\nexport function isObject(data) {\n  return typeof data === 'object' && data !== null\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}","// 重写数组的基本方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice不会 因此不需要劫持\nlet oldArrayMethods = Array.prototype\n// value.__proto__ = arrayMethods 原型链向上查找，先查找重写的，没有重写的继续向上查找\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n  'push',\n  'shift',\n  'unshift',\n  'pop',\n  'sort',\n  'splice',\n  'reverse'\n]\nmethods.forEach(method => {\n  arrayMethods[method] = function(...args) {\n    console.log(`用户调用了${method}方法`) // AOP切片编程\n    const result = oldArrayMethods[method].apply(this, args) // 调用原生数组方法\n    // push unshift 添加的元素还可能是个对象\n    let inserted // 当前插入的元素\n    let ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice': //\n        inserted = args.slice(2)\n      default:\n        break;\n    }\n    if (inserted) {\n      ob.observerArray(inserted)\n    }\n    return result\n  }\n})","// 把data中的数据都用Object.defineProperty重新定义 es5\n// 不兼容ie8及以下\nimport { isObject, def } from '../util/index'\nimport { arrayMethods } from './array'\n\nclass Observer {\n  constructor(value) {\n    // vue如果数据层次过多 需要递归解析对象中属性， 依次增加set和get方法\n    // so vue3 -> proxy\n    def(value, '__ob__', this)\n    if (Array.isArray(value)) {\n      // 如果是数组，不对索引进行监控，会导致性能问题\n      // 前端开发中很少操作索引 push shift unshift\n      value.__proto__ = arrayMethods\n      //如果数组里是对象再监控\n      this.observerArray(value)\n    } else {\n      this.copy(value)\n    }\n  }\n  observerArray(value) {\n    for (let i = 0; i < value.length; i++) {\n      observe(value[i])\n    }\n  }\n  copy(data) {\n    let keys = Object.keys(data) // [name, age, address]\n    keys.forEach(key => {\n      defineReactive(data, key, data[key])\n    })\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  observe(value) // 递归实现深度检测\n  Object.defineProperty(data, key, {\n    get() {\n      // 获取值的时候做一些事情\n      return value\n    },\n    set(newValue) {\n      console.log(('更新数据'))\n      // 设置值的时候做一些事情\n      if (newValue === value) {\n        return\n      }\n      console.log('值发生变化')\n      observe(newValue) // 继续劫持设置的值，cuz有可能设置的是一个对象\n      value = newValue\n    }\n  })\n}\n\nexport function observe(data) {\n  let isObj = isObject(data)\n  if (!isObj) {\n    return\n  }\n  return new Observer(data)\n}","import { observe } from './observer/index.js'\nexport function initState(vm) {\n  const opts = vm.$options\n  console.log(opts, '1123123')\n  // vue的数据来源 属性 方法 数据 计算属性 watch\n  if (opts.props) {\n    initProps(vm)\n  }\n  if (opts.methods) {\n    initMethods(vm)\n  }\n  if (opts.data) {\n    initData(vm)\n  }\n  if (opts.computed) {\n    initComputed(vm)\n  }\n  if (opts.watch) {\n    initWatch(vm)\n  }\n} \n\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n  // 数据初始化工作\n  let data = vm.$options.data\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\n  // 对象劫持 用户改变了数据时得到通知->刷新页面\n  // MVVM 数据变化驱动视图变化\n  // Object.defineProperty() 给属性增加get方法和set方法\n  observe(data) // 响应式原理\n}\nfunction initComputed() {}\nfunction initWatch() {}","import { initState } from './state'\n// 在原型上添加一个init方法\nexport function initMixin(Vue) {\n  // 初始化流程\n  Vue.prototype._init = function (options) {\n    // 数据的劫持\n    const vm = this // vue中使用this.$options指代的就是用户传递的属性\n    vm.$options = options\n    // 初始化状态\n    initState(vm)\n  }\n}","import { initMixin } from './init'\nfunction Vue(options) {\n  // 进行Vue的初始化操作\n  this._init(options)\n}\ninitMixin(Vue)\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","isArray","__proto__","copy","i","length","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}